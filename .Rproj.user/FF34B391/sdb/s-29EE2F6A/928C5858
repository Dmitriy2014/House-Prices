{
    "collab_server" : "",
    "contents" : "# Competition\n# House Prices: Advanced Regression Techniques\n# Goal: Predict sales prices and practice feature engineering, RFs, and gradient boosting\n# Link: https://www.kaggle.com/c/house-prices-advanced-regression-techniques\n\n#### Data preparation ####\n\n### Load and preprocess the data----\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(Amelia)\n\ngetwd()\nsetwd('C:\\\\Users\\\\user\\\\Documents\\\\R projects\\\\Kaggle\\\\House Prices')\n\ntrain <- read.csv(\"train.csv\", stringsAsFactors = F)\nmissmap(train) # ploting missingness map\ntrain[is.na(train)] <- 0\ntrain <- train %>% \n            mutate_if(is.character, as.factor)\n\n## Check whether there are any NA values\n\nmissmap(train)\n\n### Split the training data into strain and stest----\n\ntest.n <- sample(1:nrow(train), nrow(train)/3, replace = F)\nstest <- train[test.n,]\nstrain <- train[-test.n,]\nrm(test.n)\n\n### Evaluation metric function----\n\nRMSE <- function(x,y){\n  a <- sqrt(sum((log(x)-log(y))^2)/length(y))\n  return(a)\n}\n\n\n#### Plotting SalesPrice distrution by The general zoning classification ####\n\ntrain %>% ggplot(aes(x = MSZoning, y = SalePrice)) + \n            theme(legend.position=\"top\", \n                  axis.text=element_text(size = 6)) +\n            geom_point(aes(color = YearBuilt), alpha = 0.5, size = 1.5, \n                       position = position_jitter(width = 0.25, height = 0)) + \n            stat_summary(fun.y = median, fun.ymin = median, fun.ymax = median,\n                         geom = \"crossbar\", width = 0.5) + # adding madian\n            scale_y_continuous(labels = comma)\n\n\n#### Regression tree ####\n\nlibrary(rpart)\nlibrary(rpart.plot)\n\n### Fit a regression tree on strain dataset----\n\nset.seed(415)\n\ntree <- rpart(SalePrice ~., data = strain, method = \"anova\")\nrpart.plot(tree) # ploting the tree\n\nprintcp(tree) # display the results\nplotcp(tree) # visualize cross-validation results\nsummary(tree) # detailed summary of splits\n\n## Check the model using stest dataset\n\npredict <- predict(tree, stest)\nRMSE_tree <- round(RMSE(predict, stest$SalePrice), digits = 3) ## RMSE = 0.236\nplot1 <- predict-stest$SalePrice\n\n\n#### Random Forest ####\n\nlibrary(randomForest)\n\n### Fit a Random Forest on strain dataset----\n\nset.seed(415)\n\nRF1 <- randomForest(strain %>% select(-SalePrice), strain$SalePrice,\n                      ntree = 200,\n                      nodesize = 7,\n                      importance = T)\n\n## Check the model using stest dataset\n\npredict <- predict(RF1, stest)\nRMSE_RF1 <- round(RMSE(predict, stest$SalePrice), digits = 3) ## RMSE = 0.134\n\n### Feature Importance----\n\nvarImp <- importance(RF1)\nfeatureImportance <- data.frame(Feature=row.names(varImp), Importance=varImp[,1])\n\n## Plotting Feature Importance\n\nfeatureImportance %>% ggplot(aes(x=reorder(Feature, Importance), y=Importance)) +\n                        geom_bar(stat=\"identity\", fill=\"#53cfff\") +\n                        coord_flip() + \n                        theme_light(base_size=20) +\n                        xlab(\"\") +\n                        ylab(\"Importance\") + \n                        ggtitle(\"Random Forest Feature Importance\") +\n                        theme(plot.title=element_text(size=18))\n\n### Improve the model with feature importance----\n\nset.seed(415)\n\nRF2 <- randomForest(SalePrice ~ GrLivArea + BsmtFinSF1 + Neighborhood + OverallQual + \n                         + TotalBsmtSF + GarageCars + GarageArea + X2ndFlrSF + X1stFlrSF, train,\n                       ntree = 200,\n                       nodesize = 7,\n                       importance = T)\n\n## Check the model using stest dataset\n\npredict <- predict(RF2, stest)\nRMSE_RF2 <- round(RMSE(predict, stest$SalePrice), digits = 3) ## RMSE = 0.08 (Better result)\nplot2 <- predict-stest$SalePrice\n\n\n#### GBM ####\n\nlibrary(gbm)\n\n### Fit GBM on strain dataset----\n\nset.seed(415)\n\ngbm <- gbm(SalePrice ~., data = strain, distribution = \"laplace\",\n              shrinkage = 0.05,\n              interaction.depth = 5,\n              bag.fraction = 0.66,\n              n.minobsinnode = 1,\n              cv.folds = 100,\n              keep.data = F,\n              verbose = F,\n              n.trees = 500)\n\n## Check the model using stest dataset\n\npredict <- predict(gbm, stest, n.trees = 500)\nRMSE_gbm <- round(RMSE(predict, stest$SalePrice), digits = 3) ## RMSE = 0.134\nplot3 <- predict-stest$SalePrice\n\n\n#### Plotting The difference between predict and real values ####\n\ndata_plot <- data.frame(\"Regression tree\" = plot1,\n                        \"Random forest\" = plot2,\n                        \"GBM\" = plot3)\ndata_plot$Id <- row.names(data_plot)\ndata_plot <- gather(data_plot, method, value, - Id)\ndata_plot$method <- as.factor(data_plot$method)\nlevels(data_plot$method) <- c(paste0(\"GBM (\", RMSE_gbm, \")\"), \n                              paste0(\"Random Forest (\", RMSE_RF2, \")\"),\n                              paste0(\"Regression Tree (\", RMSE_tree, \")\"))\n\nggplot(data_plot, aes(x = Id, y = value, colour = method))+\n  geom_point(alpha = 0.7, size = 2)+\n  ggtitle(\"The difference between predict and real prices\")+\n  labs(x = \"Buyer Id\", y = \"The difference between prices\", colour = \" \")+\n  scale_x_discrete(breaks = c(0))+\n  theme(legend.position = \"top\",\n        legend.text = element_text(size = 12),\n        axis.text.x = element_blank(), \n        axis.title.x = element_text(size = 14),\n        axis.text.y = element_text(size = 14), \n        axis.title.y = element_text(size = 14),\n        title = element_text(size = 16))\n\n## Conclusion\n## Random Forest gave the most accurate results:\n#  - Regression Tree RMSE = 0.236;\n#  - Random Forest RMSE = 0.08;\n#  - GBM RMSE = 0.134.\n## But using the Kaggle's test dataset GBM gave the most accurate results",
    "created" : 1495629003235.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1966689086",
    "id" : "928C5858",
    "lastKnownWriteTime" : 1495629149,
    "last_content_update" : 1495629149055,
    "path" : "~/R projects/Kaggle/House Prices/HP_upd.R",
    "project_path" : "HP_upd.R",
    "properties" : {
        "docOutlineVisible" : "0",
        "tempName" : "Untitled1"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}